#include <iostream>
#include <vector>
 
 
 
// Maj in an array is an element that occurs in the array > n/2 times
 
// This program detects whether this array contains a maj or not
 
long long BaseMaj(const std::vector<long long>& input, int l, int r) {
    for (size_t i = l; i < l + (r - l) / 2 + 1; ++i) {
        int curr = input[i];
        int count = 1;
        for (size_t j = i + 1; j < r; ++j) {
            if (input[j] == curr) {
                count++;
            }
        }
        if (count > (r - l) / 2.0) {
            return curr;
        }
    }
    return -1;
} 
 
long long Majority(const std::vector<long long>& input, int l, int r) {
    if (r - l <= 8) {
        return BaseMaj(input, l, r);
    }
    int mid = l + (r - l) / 2 + 1;
    long long maj1 = Majority(input, l, mid);
    long long maj2 = Majority(input, mid, r);
    if (maj1 == maj2) {
        return maj1;
    }
    int count1 = 0;
    int count2 = 0;
    for (size_t i = l; i < r; ++i) {
        if (input[i] == maj1) {
            count1++;
        } else if (input[i] == maj2) {
            count2++;
        }
    }
    if (count1 > (r - l) / 2.0) {
        return maj1;
    }
    if (count2 > (r - l) / 2.0) {
        return maj2;
    }
    return -1;
}
 
 
int main() {
    int n;
    std::cin >> n;
    std::vector<long long> input(n);
    for (size_t i = 0; i < n; ++i) {
        std::cin >> input[i];
    }
    //std::cout << Majority(input, 0, n) << "\n";
    std::cout << (Majority(input, 0, n) != -1) << "\n";
    return 0;
}
